<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<!--This file is part of the DITA Open Toolkit project. See the accompanying LICENSE.md file for applicable licenses.-->

<reference id="plugin-newextensions" xml:lang="en-US">
  <title>Creating a new plug-in extension point</title>
  <shortdesc>If your plug-in needs to define its own extension point in an XML file, add the string
      "<codeph>_template</codeph>" to the filename before the file suffix. During integration, this file will be
    processed like the built-in DITA-OT templates.</shortdesc>
  <refbody>
    <section>
      <draft-comment author="staylor">
        <ol>
          <li>create a template file</li>
          <li>specify it in plugin.xml</li>
          <li>define extension points in plugin.xml</li>
          <li>use the extension points in the template.xml</li>
        </ol>
      </draft-comment>
      <draft-comment author="staylor">
        <ul>
          <li><xref href="plugin-anttarget.dita"/></li>
          <li><xref href="plugin-antpreprocess.dita"/></li>
          <li><xref href="plugin-antpreprocess.dita"/></li>
          <li>define extension point. create an extension point to enable other plug-ins to extend
            or override the processing in the plug-in you are creating. For example, you might want
            to create a plug-in that defines some common preprocessing customizations to be used by
            both webhelp and eBook outputs you create in separate plug-ins.</li>
          <li>change to task</li>
          <li>explain template processing, (TEST: maybe <xmlelement>dita:extension</xmlelement> is
            used when the template is parsed to a build file?)</li>
        </ul>
      </draft-comment>
    </section>
    <section>
      <p>Template files are used to integrate most DITA-OT extensions. For example, the file
          <filepath>dita2xhtml_template.xsl</filepath> contains all of the default rules for
        converting DITA topics to XHTML, along with an integration point for plug-in extensions.
        When the integrator runs, the file dita2xhtml.xsl is recreated, and the integration point is
        replaced with references to all appropriate plug-ins.</p>
      <p>To mark a new file as a template file, use the <xmlelement>template</xmlelement>
        element.</p>
      <p>The template extension namespace has the URI
          <codeph>http://dita-ot.sourceforge.net</codeph>. It is used to identify elements and
        attributes that have a special meaning in template processing. This documentation uses a
        prefix of <codeph>dita:</codeph> for referring to elements in the template extension
        namespace. However, template files are free to use any prefix, provided that there is a
        namespace declaration that binds the prefix to the URI of the template extension namespace.
      </p>
      <draft-comment author="staylor">
        <p conref="plugin-configfile.dita#plugin-configfile/extension-point-ids"/>
        <note conref="plugin-configfile.dita#plugin-configfile/entension-point-ids-note"/>
        <p conref="plugin-configfile.dita#plugin-configfile/tokendef"/>
      </draft-comment>
    </section>
  </refbody>
</reference>
